{"remainingRequest":"D:\\Business\\web\\ibadurrahman v.2\\main\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Business\\web\\ibadurrahman v.2\\main\\src\\views\\Donasi.vue?vue&type=template&id=4bd1130e&","dependencies":[{"path":"D:\\Business\\web\\ibadurrahman v.2\\main\\src\\views\\Donasi.vue","mtime":1647180800114},{"path":"D:\\Business\\web\\ibadurrahman v.2\\main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647174939804},{"path":"D:\\Business\\web\\ibadurrahman v.2\\main\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1647174962142},{"path":"D:\\Business\\web\\ibadurrahman v.2\\main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647174939804},{"path":"D:\\Business\\web\\ibadurrahman v.2\\main\\node_modules\\vue-loader\\lib\\index.js","mtime":1647174962140}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}